CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT(brick VERSION 2.1.0)

SET(CMAKE_SYSTEM_NAME Linux)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/target)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O0 -Wall")


OPTION(RSYSLOG "RSYSLOG" OFF)
IF(RSYSLOG)
	ADD_DEFINITIONS(-DRSYSLOG)
ENDIF(RSYSLOG)

# cmake include.
INCLUDE(cmake/nng.cmake)

OPTION(SSL "SSL" OFF)
IF(SSL)
	INCLUDE(cmake/openssl.cmake)
ENDIF(SSL)

INCLUDE(cmake/paho-mqtt.cmake)


# nng include files.
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/libraries_path/nng-1.5.2/include")
LINK_DIRECTORIES("${PROJECT_SOURCE_DIR}/build/libraries_path/nng-1.5.2")

# ssl
IF(SSL)
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/libraries_path/openssl-OpenSSL_1_1_1o/__install/include")
LINK_DIRECTORIES("${PROJECT_SOURCE_DIR}/libraries_path/openssl-OpenSSL_1_1_1o/__install/lib")
ENDIF(SSL)


# mqtt include files.
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/libraries_path/paho.mqtt.c-1.3.12/src")
LINK_DIRECTORIES("${PROJECT_SOURCE_DIR}/build/libraries_path/paho.mqtt.c-1.3.12/src")

ADD_EXECUTABLE(${PROJECT_NAME})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} PRIVATE
					pthread
					m)


# ssl library
IF(SSL)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} PRIVATE ssl)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} PRIVATE crypto)
ENDIF(SSL)

# mqtt library.
TARGET_LINK_LIBRARIES(${PROJECT_NAME} PRIVATE paho-mqtt3a)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} PRIVATE paho-mqtt3c)

# nng library.
TARGET_LINK_LIBRARIES(${PROJECT_NAME}  PRIVATE nng)


MESSAGE(STATUS "ADD_SUBDIRECTORY ${LOCAL_LIBRARIES_PATH}/${MQTT_DIR_NAME}")
ADD_SUBDIRECTORY(${LOCAL_LIBRARIES_PATH}/${MQTT_DIR_NAME})

MESSAGE(STATUS "ADD_SUBDIRECTORY ${LOCAL_LIBRARIES_PATH}/${NNG_DIR_NAME}")
ADD_SUBDIRECTORY(${LOCAL_LIBRARIES_PATH}/${NNG_DIR_NAME})

MESSAGE(STATUS "ADD_SUBDIRECTORY ${PROJECT_SOURCE_DIR}/src")
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/src)


SET(CPACK_PROJECT_NAME ${PROJECT_NAME})
SET(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
INCLUDE(CPack)

